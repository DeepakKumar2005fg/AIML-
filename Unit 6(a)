{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1vcGvKjWZQQizz-CfOLpfyIPHSAW45XIY","timestamp":1729333890840}],"authorship_tag":"ABX9TyNxOx8i/RolSZ598JeOiwL/"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XbCH8rwMUCWx","executionInfo":{"status":"ok","timestamp":1729333882602,"user_tz":-330,"elapsed":541,"user":{"displayName":"Deepak Kumar","userId":"18171873771241294338"}},"outputId":"e4261078-6c86-488e-d86e-9186d510649c"},"outputs":[{"output_type":"stream","name":"stdout","text":["   fixed acidity  volatile acidity  citric acid  residual sugar  chlorides  \\\n","0            7.0              0.27         0.36            20.7      0.045   \n","1            6.3              0.30         0.34             1.6      0.049   \n","2            8.1              0.28         0.40             6.9      0.050   \n","3            7.2              0.23         0.32             8.5      0.058   \n","4            7.2              0.23         0.32             8.5      0.058   \n","\n","   free sulfur dioxide  total sulfur dioxide  density    pH  sulphates  \\\n","0                 45.0                 170.0   1.0010  3.00       0.45   \n","1                 14.0                 132.0   0.9940  3.30       0.49   \n","2                 30.0                  97.0   0.9951  3.26       0.44   \n","3                 47.0                 186.0   0.9956  3.19       0.40   \n","4                 47.0                 186.0   0.9956  3.19       0.40   \n","\n","   alcohol  quality  \n","0      8.8        6  \n","1      9.5        6  \n","2     10.1        6  \n","3      9.9        6  \n","4      9.9        6  \n","Accuracy: 0.5394557823129251\n","Confusion Matrix:\n","[[  0   0   3   2   1   1   0]\n"," [  0   1  20  19   0   0   0]\n"," [  0   1 235 187   2   1   0]\n"," [  0   0 127 495  45   0   1]\n"," [  0   0  22 196  62   0   0]\n"," [  0   0   2  35  12   0   0]\n"," [  0   0   0   0   0   0   0]]\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           3       0.00      0.00      0.00         7\n","           4       0.50      0.03      0.05        40\n","           5       0.57      0.55      0.56       426\n","           6       0.53      0.74      0.62       668\n","           7       0.51      0.22      0.31       280\n","           8       0.00      0.00      0.00        49\n","           9       0.00      0.00      0.00         0\n","\n","    accuracy                           0.54      1470\n","   macro avg       0.30      0.22      0.22      1470\n","weighted avg       0.52      0.54      0.50      1470\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n","/usr/local/lib/python3.10/dist-packages/sklearn/metrics/_classification.py:1531: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, f\"{metric.capitalize()} is\", len(result))\n"]}],"source":["\n","import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n","\n","\n","df = pd.read_csv('/content/whitewines.csv')\n","\n","\n","print(df.head())\n","\n","\n","\n","X = df.drop('quality', axis=1)\n","y = df['quality']\n","\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n","\n","scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)\n","\n","\n","model = LogisticRegression()\n","model.fit(X_train, y_train)\n","\n","y_pred = model.predict(X_test)\n","\n","\n","accuracy = accuracy_score(y_test, y_pred)\n","conf_matrix = confusion_matrix(y_test, y_pred)\n","class_report = classification_report(y_test, y_pred)\n","\n","print(f'Accuracy: {accuracy}')\n","print('Confusion Matrix:')\n","print(conf_matrix)\n","print('Classification Report:')\n","print(class_report)"]}]}