{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1nq4rNaKqHW_uIoGelq4xpP6iYHdxZTfs","timestamp":1729261613202}],"authorship_tag":"ABX9TyNuVaSlhNc5p8xJlZvSC3qe"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["\n","import pandas as pd\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import r2_score\n","import numpy as np\n","\n","\n","X = np.array([[1], [2], [3], [4], [5]])\n","y = np.array([2, 4, 5, 4, 5])\n","\n","\n","model = LinearRegression()\n","model.fit(X, y)\n","\n","\n","y_pred = model.predict(X)\n","\n","\n","r2 = r2_score(y, y_pred)\n","\n","\n","n = len(y)\n","k = X.shape[1]\n","adj_r2 = 1 - ((1 - r2) * (n - 1) / (n - k - 1))\n","\n","print(\"R-squared:\", r2)\n","print(\"Adjusted R-squared:\", adj_r2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xarox0lUBKmm","executionInfo":{"status":"ok","timestamp":1729261605320,"user_tz":-330,"elapsed":469,"user":{"displayName":"Deepak Kumar","userId":"18171873771241294338"}},"outputId":"97d930f1-6499-4abd-8cd8-b776697596d7"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["R-squared: 0.6000000000000001\n","Adjusted R-squared: 0.4666666666666668\n"]}]}]}